var CS =
  CS ||
  (function (t, e) {
    var r = {},
      i = (r.lib = {}),
      n = function () {},
      o = (i.Base = {
        extend: function (t) {
          n.prototype = this;
          var e = new n();
          return (
            t && e.mixIn(t),
            e.hasOwnProperty("init") ||
              (e.init = function () {
                e.$super.init.apply(this, arguments);
              }),
            (e.init.prototype = e),
            (e.$super = this),
            e
          );
        },
        create: function () {
          var t = this.extend();
          return t.init.apply(t, arguments), t;
        },
        init: function () {},
        mixIn: function (t) {
          for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
          t.hasOwnProperty("toString") && (this.toString = t.toString);
        },
        clone: function () {
          return this.init.prototype.extend(this);
        },
      }),
      s = (i.WordArray = o.extend({
        init: function (t, e) {
          (t = this.words = t || []),
            (this.sigBytes = void 0 != e ? e : 4 * t.length);
        },
        toString: function (t) {
          return (t || a).stringify(this);
        },
        concat: function (t) {
          var e = this.words,
            r = t.words,
            i = this.sigBytes;
          if (((t = t.sigBytes), this.clamp(), i % 4))
            for (var n = 0; n < t; n++)
              e[(i + n) >>> 2] |=
                ((r[n >>> 2] >>> (24 - 8 * (n % 4))) & 255) <<
                (24 - 8 * ((i + n) % 4));
          else if (65535 < r.length)
            for (n = 0; n < t; n += 4) e[(i + n) >>> 2] = r[n >>> 2];
          else e.push.apply(e, r);
          return (this.sigBytes += t), this;
        },
        clamp: function () {
          var e = this.words,
            r = this.sigBytes;
          (e[r >>> 2] &= 4294967295 << (32 - 8 * (r % 4))),
            (e.length = t.ceil(r / 4));
        },
        clone: function () {
          var t = o.clone.call(this);
          return (t.words = this.words.slice(0)), t;
        },
        random: function (e) {
          for (var r = [], i = 0; i < e; i += 4)
            r.push((4294967296 * t.random()) | 0);
          return new s.init(r, e);
        },
      })),
      c = (r.enc = {}),
      a = (c.Hex = {
        stringify: function (t) {
          var e = t.words;
          t = t.sigBytes;
          for (var r = [], i = 0; i < t; i++) {
            var n = (e[i >>> 2] >>> (24 - 8 * (i % 4))) & 255;
            r.push((n >>> 4).toString(16)), r.push((15 & n).toString(16));
          }
          return r.join("");
        },
        parse: function (t) {
          for (var e = t.length, r = [], i = 0; i < e; i += 2)
            r[i >>> 3] |= parseInt(t.substr(i, 2), 16) << (24 - 4 * (i % 8));
          return new s.init(r, e / 2);
        },
      }),
      f = (c.Latin1 = {
        stringify: function (t) {
          var e = t.words;
          t = t.sigBytes;
          for (var r = [], i = 0; i < t; i++)
            r.push(
              String.fromCharCode((e[i >>> 2] >>> (24 - 8 * (i % 4))) & 255)
            );
          return r.join("");
        },
        parse: function (t) {
          for (var e = t.length, r = [], i = 0; i < e; i++)
            r[i >>> 2] |= (255 & t.charCodeAt(i)) << (24 - 8 * (i % 4));
          return new s.init(r, e);
        },
      }),
      h = (c.Utf8 = {
        stringify: function (t) {
          try {
            return decodeURIComponent(escape(f.stringify(t)));
          } catch (e) {
            throw Error("Malformed UTF-8 data");
          }
        },
        parse: function (t) {
          return f.parse(unescape(encodeURIComponent(t)));
        },
      }),
      u = (i.BufferedBlockAlgorithm = o.extend({
        reset: function () {
          (this._data = new s.init()), (this._nDataBytes = 0);
        },
        _append: function (t) {
          "string" == typeof t && (t = h.parse(t)),
            this._data.concat(t),
            (this._nDataBytes += t.sigBytes);
        },
        _process: function (e) {
          var r = this._data,
            i = r.words,
            n = r.sigBytes,
            o = this.blockSize,
            c = n / (4 * o),
            c = e ? t.ceil(c) : t.max((0 | c) - this._minBufferSize, 0);
          if (((e = c * o), (n = t.min(4 * e, n)), e)) {
            for (var a = 0; a < e; a += o) this._doProcessBlock(i, a);
            (a = i.splice(0, e)), (r.sigBytes -= n);
          }
          return new s.init(a, n);
        },
        clone: function () {
          var t = o.clone.call(this);
          return (t._data = this._data.clone()), t;
        },
        _minBufferSize: 0,
      }));
    i.Hasher = u.extend({
      cfg: o.extend(),
      init: function (t) {
        (this.cfg = this.cfg.extend(t)), this.reset();
      },
      reset: function () {
        u.reset.call(this), this._doReset();
      },
      update: function (t) {
        return this._append(t), this._process(), this;
      },
      finalize: function (t) {
        return t && this._append(t), this._doFinalize();
      },
      blockSize: 16,
      _createHelper: function (t) {
        return function (e, r) {
          return new t.init(r).finalize(e);
        };
      },
      _createHmacHelper: function (t) {
        return function (e, r) {
          return new _.HMAC.init(t, r).finalize(e);
        };
      },
    });
    var _ = (r.algo = {});
    return r;
  })(Math);
function enMsg(t) {
  let e = Math.floor(900 * Math.random() + 100).toString(),
    r = CS.enc.Base64.parse(""),
    i = CS.SA("notify" + e);
  return (
    "string" == typeof t
      ? ((t = t.slice()),
        (se = CS.A.ec(t, i, {
          iv: r,
          mode: CS.mode.CBC,
          padding: CS.pad.Pkcs7,
        })))
      : (se = CS.A.ec(JSON.stringify(t), i, {
          iv: r,
          mode: CS.mode.CBC,
          padding: CS.pad.Pkcs7,
        })),
    se.toString() + e
  );
}
!(function () {
  var t = CS,
    e = t.lib.WordArray;
  t.enc.Base64 = {
    stringify: function (t) {
      var e = t.words,
        r = t.sigBytes,
        i = this._map;
      t.clamp(), (t = []);
      for (var n = 0; n < r; n += 3)
        for (
          var o =
              (((e[n >>> 2] >>> (24 - 8 * (n % 4))) & 255) << 16) |
              (((e[(n + 1) >>> 2] >>> (24 - 8 * ((n + 1) % 4))) & 255) << 8) |
              ((e[(n + 2) >>> 2] >>> (24 - 8 * ((n + 2) % 4))) & 255),
            s = 0;
          4 > s && n + 0.75 * s < r;
          s++
        )
          t.push(i.charAt((o >>> (6 * (3 - s))) & 63));
      if ((e = i.charAt(64))) for (; t.length % 4; ) t.push(e);
      return t.join("");
    },
    parse: function (t) {
      var r = t.length,
        i = this._map,
        n = i.charAt(64);
      n && -1 != (n = t.indexOf(n)) && (r = n);
      for (var n = [], o = 0, s = 0; s < r; s++)
        if (s % 4) {
          var c = i.indexOf(t.charAt(s - 1)) << (2 * (s % 4)),
            a = i.indexOf(t.charAt(s)) >>> (6 - 2 * (s % 4));
          (n[o >>> 2] |= (c | a) << (24 - 8 * (o % 4))), o++;
        }
      return e.create(n, o);
    },
    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  };
})(),
  (function (t) {
    function e(t, e, r, i, n, o, s) {
      return (
        (((t = t + ((e & r) | (~e & i)) + n + s) << o) | (t >>> (32 - o))) + e
      );
    }
    function r(t, e, r, i, n, o, s) {
      return (
        (((t = t + ((e & i) | (r & ~i)) + n + s) << o) | (t >>> (32 - o))) + e
      );
    }
    function i(t, e, r, i, n, o, s) {
      return (((t = t + (e ^ r ^ i) + n + s) << o) | (t >>> (32 - o))) + e;
    }
    function n(t, e, r, i, n, o, s) {
      return (((t = t + (r ^ (e | ~i)) + n + s) << o) | (t >>> (32 - o))) + e;
    }
    for (
      var o = CS,
        s = o.lib,
        c = s.WordArray,
        a = s.Hasher,
        s = o.algo,
        f = [],
        h = 0;
      64 > h;
      h++
    )
      f[h] = (4294967296 * t.abs(t.sin(h + 1))) | 0;
    (s = s.MD5 =
      a.extend({
        _doReset: function () {
          this._hash = new c.init([
            1732584193, 4023233417, 2562383102, 271733878,
          ]);
        },
        _doProcessBlock: function (t, o) {
          for (var s = 0; 16 > s; s++) {
            var c = o + s,
              a = t[c];
            t[c] =
              (((a << 8) | (a >>> 24)) & 16711935) |
              (((a << 24) | (a >>> 8)) & 4278255360);
          }
          var s = this._hash.words,
            c = t[o + 0],
            a = t[o + 1],
            h = t[o + 2],
            u = t[o + 3],
            _ = t[o + 4],
            p = t[o + 5],
            d = t[o + 6],
            l = t[o + 7],
            $ = t[o + 8],
            y = t[o + 9],
            v = t[o + 10],
            g = t[o + 11],
            S = t[o + 12],
            B = t[o + 13],
            m = t[o + 14],
            x = t[o + 15],
            k = s[0],
            C = s[1],
            w = s[2],
            z = s[3],
            k = e(k, C, w, z, c, 7, f[0]),
            z = e(z, k, C, w, a, 12, f[1]),
            w = e(w, z, k, C, h, 17, f[2]),
            C = e(C, w, z, k, u, 22, f[3]),
            k = e(k, C, w, z, _, 7, f[4]),
            z = e(z, k, C, w, p, 12, f[5]),
            w = e(w, z, k, C, d, 17, f[6]),
            C = e(C, w, z, k, l, 22, f[7]),
            k = e(k, C, w, z, $, 7, f[8]),
            z = e(z, k, C, w, y, 12, f[9]),
            w = e(w, z, k, C, v, 17, f[10]),
            C = e(C, w, z, k, g, 22, f[11]),
            k = e(k, C, w, z, S, 7, f[12]),
            z = e(z, k, C, w, B, 12, f[13]),
            w = e(w, z, k, C, m, 17, f[14]),
            C = e(C, w, z, k, x, 22, f[15]),
            k = r(k, C, w, z, a, 5, f[16]),
            z = r(z, k, C, w, d, 9, f[17]),
            w = r(w, z, k, C, g, 14, f[18]),
            C = r(C, w, z, k, c, 20, f[19]),
            k = r(k, C, w, z, p, 5, f[20]),
            z = r(z, k, C, w, v, 9, f[21]),
            w = r(w, z, k, C, x, 14, f[22]),
            C = r(C, w, z, k, _, 20, f[23]),
            k = r(k, C, w, z, y, 5, f[24]),
            z = r(z, k, C, w, m, 9, f[25]),
            w = r(w, z, k, C, u, 14, f[26]),
            C = r(C, w, z, k, $, 20, f[27]),
            k = r(k, C, w, z, B, 5, f[28]),
            z = r(z, k, C, w, h, 9, f[29]),
            w = r(w, z, k, C, l, 14, f[30]),
            C = r(C, w, z, k, S, 20, f[31]),
            k = i(k, C, w, z, p, 4, f[32]),
            z = i(z, k, C, w, $, 11, f[33]),
            w = i(w, z, k, C, g, 16, f[34]),
            C = i(C, w, z, k, m, 23, f[35]),
            k = i(k, C, w, z, a, 4, f[36]),
            z = i(z, k, C, w, _, 11, f[37]),
            w = i(w, z, k, C, l, 16, f[38]),
            C = i(C, w, z, k, v, 23, f[39]),
            k = i(k, C, w, z, B, 4, f[40]),
            z = i(z, k, C, w, c, 11, f[41]),
            w = i(w, z, k, C, u, 16, f[42]),
            C = i(C, w, z, k, d, 23, f[43]),
            k = i(k, C, w, z, y, 4, f[44]),
            z = i(z, k, C, w, S, 11, f[45]),
            w = i(w, z, k, C, x, 16, f[46]),
            C = i(C, w, z, k, h, 23, f[47]),
            k = n(k, C, w, z, c, 6, f[48]),
            z = n(z, k, C, w, l, 10, f[49]),
            w = n(w, z, k, C, m, 15, f[50]),
            C = n(C, w, z, k, p, 21, f[51]),
            k = n(k, C, w, z, S, 6, f[52]),
            z = n(z, k, C, w, u, 10, f[53]),
            w = n(w, z, k, C, v, 15, f[54]),
            C = n(C, w, z, k, a, 21, f[55]),
            k = n(k, C, w, z, $, 6, f[56]),
            z = n(z, k, C, w, x, 10, f[57]),
            w = n(w, z, k, C, d, 15, f[58]),
            C = n(C, w, z, k, B, 21, f[59]),
            k = n(k, C, w, z, _, 6, f[60]),
            z = n(z, k, C, w, g, 10, f[61]),
            w = n(w, z, k, C, h, 15, f[62]),
            C = n(C, w, z, k, y, 21, f[63]);
          (s[0] = (s[0] + k) | 0),
            (s[1] = (s[1] + C) | 0),
            (s[2] = (s[2] + w) | 0),
            (s[3] = (s[3] + z) | 0);
        },
        _doFinalize: function () {
          var e = this._data,
            r = e.words,
            i = 8 * this._nDataBytes,
            n = 8 * e.sigBytes;
          r[n >>> 5] |= 128 << (24 - (n % 32));
          var o = t.floor(i / 4294967296);
          for (
            r[(((n + 64) >>> 9) << 4) + 15] =
              (((o << 8) | (o >>> 24)) & 16711935) |
              (((o << 24) | (o >>> 8)) & 4278255360),
              r[(((n + 64) >>> 9) << 4) + 14] =
                (((i << 8) | (i >>> 24)) & 16711935) |
                (((i << 24) | (i >>> 8)) & 4278255360),
              e.sigBytes = 4 * (r.length + 1),
              this._process(),
              r = (e = this._hash).words,
              i = 0;
            4 > i;
            i++
          )
            (n = r[i]),
              (r[i] =
                (((n << 8) | (n >>> 24)) & 16711935) |
                (((n << 24) | (n >>> 8)) & 4278255360));
          return e;
        },
        clone: function () {
          var t = a.clone.call(this);
          return (t._hash = this._hash.clone()), t;
        },
      })),
      (o.MD5 = a._createHelper(s)),
      (o.HmacMD5 = a._createHmacHelper(s));
  })(Math),
  (function () {
    var t = CS,
      e = t.lib,
      r = e.Base,
      i = e.WordArray,
      e = t.algo,
      n = (e.EvpKDF = r.extend({
        cfg: r.extend({ keySize: 4, hasher: e.MD5, iterations: 1 }),
        init: function (t) {
          this.cfg = this.cfg.extend(t);
        },
        compute: function (t, e) {
          for (
            var r = this.cfg,
              n = r.hasher.create(),
              o = i.create(),
              s = o.words,
              c = r.keySize,
              r = r.iterations;
            s.length < c;

          ) {
            a && n.update(a);
            var a = n.update(t).finalize(e);
            n.reset();
            for (var f = 1; f < r; f++) (a = n.finalize(a)), n.reset();
            o.concat(a);
          }
          return (o.sigBytes = 4 * c), o;
        },
      }));
    t.EvpKDF = function (t, e, r) {
      return n.create(r).compute(t, e);
    };
  })(),
  CS.lib.Cipher ||
    (function (t) {
      var e = CS,
        r = e.lib,
        i = r.Base,
        n = r.WordArray,
        o = r.BufferedBlockAlgorithm,
        s = e.enc.Base64,
        c = e.algo.EvpKDF,
        a = (r.Cipher = o.extend({
          cfg: i.extend(),
          createEncryptor: function (t, e) {
            return this.create(this._ENC_XFORM_MODE, t, e);
          },
          createDecryptor: function (t, e) {
            return this.create(this._DEC_XFORM_MODE, t, e);
          },
          init: function (t, e, r) {
            (this.cfg = this.cfg.extend(r)),
              (this._xformMode = t),
              (this._key = e),
              this.reset();
          },
          reset: function () {
            o.reset.call(this), this._doReset();
          },
          process: function (t) {
            return this._append(t), this._process();
          },
          finalize: function (t) {
            return t && this._append(t), this._doFinalize();
          },
          keySize: 4,
          ivSize: 4,
          _ENC_XFORM_MODE: 1,
          _DEC_XFORM_MODE: 2,
          _createHelper: function (t) {
            return {
              ec: function (e, r, i) {
                return ("string" == typeof r ? d : p).ec(t, e, r, i);
              },
              decrypt: function (e, r, i) {
                return ("string" == typeof r ? d : p).decrypt(t, e, r, i);
              },
            };
          },
        }));
      r.StreamCipher = a.extend({
        _doFinalize: function () {
          return this._process(!0);
        },
        blockSize: 1,
      });
      var f = (e.mode = {}),
        h = function (t, e, r) {
          var i = this._iv;
          i ? (this._iv = void 0) : (i = this._prevBlock);
          for (var n = 0; n < r; n++) t[e + n] ^= i[n];
        },
        u = (r.BlockCipherMode = i.extend({
          createEncryptor: function (t, e) {
            return this.Encryptor.create(t, e);
          },
          createDecryptor: function (t, e) {
            return this.Decryptor.create(t, e);
          },
          init: function (t, e) {
            (this._cipher = t), (this._iv = e);
          },
        })).extend();
      (u.Encryptor = u.extend({
        processBlock: function (t, e) {
          var r = this._cipher,
            i = r.blockSize;
          h.call(this, t, e, i),
            r.encryptBlock(t, e),
            (this._prevBlock = t.slice(e, e + i));
        },
      })),
        (u.Decryptor = u.extend({
          processBlock: function (t, e) {
            var r = this._cipher,
              i = r.blockSize,
              n = t.slice(e, e + i);
            r.decryptBlock(t, e), h.call(this, t, e, i), (this._prevBlock = n);
          },
        })),
        (f = f.CBC = u),
        (u = (e.pad = {}).Pkcs7 =
          {
            pad: function (t, e) {
              for (
                var r = 4 * e,
                  r = r - (t.sigBytes % r),
                  i = (r << 24) | (r << 16) | (r << 8) | r,
                  o = [],
                  s = 0;
                s < r;
                s += 4
              )
                o.push(i);
              (r = n.create(o, r)), t.concat(r);
            },
            unpad: function (t) {
              t.sigBytes -= 255 & t.words[(t.sigBytes - 1) >>> 2];
            },
          }),
        (r.BlockCipher = a.extend({
          cfg: a.cfg.extend({ mode: f, padding: u }),
          reset: function () {
            a.reset.call(this);
            var t = this.cfg,
              e = t.iv,
              t = t.mode;
            if (this._xformMode == this._ENC_XFORM_MODE)
              var r = t.createEncryptor;
            else (r = t.createDecryptor), (this._minBufferSize = 1);
            this._mode = r.call(t, this, e && e.words);
          },
          _doProcessBlock: function (t, e) {
            this._mode.processBlock(t, e);
          },
          _doFinalize: function () {
            var t = this.cfg.padding;
            if (this._xformMode == this._ENC_XFORM_MODE) {
              t.pad(this._data, this.blockSize);
              var e = this._process(!0);
            } else (e = this._process(!0)), t.unpad(e);
            return e;
          },
          blockSize: 4,
        }));
      var _ = (r.CipherParams = i.extend({
          init: function (t) {
            this.mixIn(t);
          },
          toString: function (t) {
            return (t || this.formatter).stringify(this);
          },
        })),
        f = ((e.format = {}).OpenSSL = {
          stringify: function (t) {
            var e = t.ciphertext;
            return (
              (t = t.salt)
                ? n.create([1398893684, 1701076831]).concat(t).concat(e)
                : e
            ).toString(s);
          },
          parse: function (t) {
            var e = (t = s.parse(t)).words;
            if (1398893684 == e[0] && 1701076831 == e[1]) {
              var r = n.create(e.slice(2, 4));
              e.splice(0, 4), (t.sigBytes -= 16);
            }
            return _.create({ ciphertext: t, salt: r });
          },
        }),
        p = (r.SerializableCipher = i.extend({
          cfg: i.extend({ format: f }),
          ec: function (t, e, r, i) {
            i = this.cfg.extend(i);
            var n = t.createEncryptor(r, i);
            return (
              (e = n.finalize(e)),
              (n = n.cfg),
              _.create({
                ciphertext: e,
                key: r,
                iv: n.iv,
                algorithm: t,
                mode: n.mode,
                padding: n.padding,
                blockSize: t.blockSize,
                formatter: i.format,
              })
            );
          },
          decrypt: function (t, e, r, i) {
            return (
              (i = this.cfg.extend(i)),
              (e = this._parse(e, i.format)),
              t.createDecryptor(r, i).finalize(e.ciphertext)
            );
          },
          _parse: function (t, e) {
            return "string" == typeof t ? e.parse(t, this) : t;
          },
        })),
        e = ((e.kdf = {}).OpenSSL = {
          execute: function (t, e, r, i) {
            return (
              i || (i = n.random(8)),
              (t = c.create({ keySize: e + r }).compute(t, i)),
              (r = n.create(t.words.slice(e), 4 * r)),
              (t.sigBytes = 4 * e),
              _.create({ key: t, iv: r, salt: i })
            );
          },
        }),
        d = (r.PasswordBasedCipher = p.extend({
          cfg: p.cfg.extend({ kdf: e }),
          ec: function (t, e, r, i) {
            return (
              (r = (i = this.cfg.extend(i)).kdf.execute(
                r,
                t.keySize,
                t.ivSize
              )),
              (i.iv = r.iv),
              (t = p.ec.call(this, t, e, r.key, i)).mixIn(r),
              t
            );
          },
          decrypt: function (t, e, r, i) {
            return (
              (i = this.cfg.extend(i)),
              (e = this._parse(e, i.format)),
              (r = i.kdf.execute(r, t.keySize, t.ivSize, e.salt)),
              (i.iv = r.iv),
              p.decrypt.call(this, t, e, r.key, i)
            );
          },
        }));
    })(),
  (function () {
    for (
      var t = CS,
        e = t.lib.BlockCipher,
        r = t.algo,
        i = [],
        n = [],
        o = [],
        s = [],
        c = [],
        a = [],
        f = [],
        h = [],
        u = [],
        _ = [],
        p = [],
        d = 0;
      256 > d;
      d++
    )
      p[d] = 128 > d ? d << 1 : (d << 1) ^ 283;
    for (var l = 0, $ = 0, d = 0; 256 > d; d++) {
      var y = $ ^ ($ << 1) ^ ($ << 2) ^ ($ << 3) ^ ($ << 4),
        y = (y >>> 8) ^ (255 & y) ^ 99;
      (i[l] = y), (n[y] = l);
      var v = p[l],
        g = p[v],
        S = p[g],
        B = (257 * p[y]) ^ (16843008 * y);
      (o[l] = (B << 24) | (B >>> 8)),
        (s[l] = (B << 16) | (B >>> 16)),
        (c[l] = (B << 8) | (B >>> 24)),
        (a[l] = B),
        (B = (16843009 * S) ^ (65537 * g) ^ (257 * v) ^ (16843008 * l)),
        (f[y] = (B << 24) | (B >>> 8)),
        (h[y] = (B << 16) | (B >>> 16)),
        (u[y] = (B << 8) | (B >>> 24)),
        (_[y] = B),
        l ? ((l = v ^ p[p[p[S ^ v]]]), ($ ^= p[p[$]])) : (l = $ = 1);
    }
    var m = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
      r = (r.A = e.extend({
        _doReset: function () {
          for (
            var t = this._key,
              e = t.words,
              r = t.sigBytes / 4,
              t = 4 * ((this._nRounds = r + 6) + 1),
              n = (this._keySchedule = []),
              o = 0;
            o < t;
            o++
          )
            if (o < r) n[o] = e[o];
            else {
              var s = n[o - 1];
              o % r
                ? 6 < r &&
                  4 == o % r &&
                  (s =
                    (i[s >>> 24] << 24) |
                    (i[(s >>> 16) & 255] << 16) |
                    (i[(s >>> 8) & 255] << 8) |
                    i[255 & s])
                : ((s =
                    (i[(s = (s << 8) | (s >>> 24)) >>> 24] << 24) |
                    (i[(s >>> 16) & 255] << 16) |
                    (i[(s >>> 8) & 255] << 8) |
                    i[255 & s]),
                  (s ^= m[(o / r) | 0] << 24)),
                (n[o] = n[o - r] ^ s);
            }
          for (r = 0, e = this._invKeySchedule = []; r < t; r++)
            (o = t - r),
              (s = r % 4 ? n[o] : n[o - 4]),
              (e[r] =
                4 > r || 4 >= o
                  ? s
                  : f[i[s >>> 24]] ^
                    h[i[(s >>> 16) & 255]] ^
                    u[i[(s >>> 8) & 255]] ^
                    _[i[255 & s]]);
        },
        encryptBlock: function (t, e) {
          this._doCryptBlock(t, e, this._keySchedule, o, s, c, a, i);
        },
        decryptBlock: function (t, e) {
          var r = t[e + 1];
          (t[e + 1] = t[e + 3]),
            (t[e + 3] = r),
            this._doCryptBlock(t, e, this._invKeySchedule, f, h, u, _, n),
            (r = t[e + 1]),
            (t[e + 1] = t[e + 3]),
            (t[e + 3] = r);
        },
        _doCryptBlock: function (t, e, r, i, n, o, s, c) {
          for (
            var a = this._nRounds,
              f = t[e] ^ r[0],
              h = t[e + 1] ^ r[1],
              u = t[e + 2] ^ r[2],
              _ = t[e + 3] ^ r[3],
              p = 4,
              d = 1;
            d < a;
            d++
          )
            var l =
                i[f >>> 24] ^
                n[(h >>> 16) & 255] ^
                o[(u >>> 8) & 255] ^
                s[255 & _] ^
                r[p++],
              $ =
                i[h >>> 24] ^
                n[(u >>> 16) & 255] ^
                o[(_ >>> 8) & 255] ^
                s[255 & f] ^
                r[p++],
              y =
                i[u >>> 24] ^
                n[(_ >>> 16) & 255] ^
                o[(f >>> 8) & 255] ^
                s[255 & h] ^
                r[p++],
              _ =
                i[_ >>> 24] ^
                n[(f >>> 16) & 255] ^
                o[(h >>> 8) & 255] ^
                s[255 & u] ^
                r[p++],
              f = l,
              h = $,
              u = y;
          (l =
            ((c[f >>> 24] << 24) |
              (c[(h >>> 16) & 255] << 16) |
              (c[(u >>> 8) & 255] << 8) |
              c[255 & _]) ^
            r[p++]),
            ($ =
              ((c[h >>> 24] << 24) |
                (c[(u >>> 16) & 255] << 16) |
                (c[(_ >>> 8) & 255] << 8) |
                c[255 & f]) ^
              r[p++]),
            (y =
              ((c[u >>> 24] << 24) |
                (c[(_ >>> 16) & 255] << 16) |
                (c[(f >>> 8) & 255] << 8) |
                c[255 & h]) ^
              r[p++]),
            (_ =
              ((c[_ >>> 24] << 24) |
                (c[(f >>> 16) & 255] << 16) |
                (c[(h >>> 8) & 255] << 8) |
                c[255 & u]) ^
              r[p++]),
            (t[e] = l),
            (t[e + 1] = $),
            (t[e + 2] = y),
            (t[e + 3] = _);
        },
        keySize: 8,
      }));
    t.A = e._createHelper(r);
  })(),
  (function (t, e) {
    "object" == typeof exports
      ? (module.exports = exports = e(require("./core")))
      : "function" == typeof define && define.amd
      ? define(["./core"], e)
      : e(t.CS);
  })(this, function (t) {
    var e, r, i, n, o, s, c, a, f, h;
    return (
      (e = Math),
      (n = (i = (r = t).lib).WordArray),
      (o = i.Hasher),
      (s = r.algo),
      (c = []),
      (a = []),
      (function () {
        function t(t) {
          for (var r = e.sqrt(t), i = 2; i <= r; i++) if (!(t % i)) return !1;
          return !0;
        }
        function r(t) {
          return ((t - (0 | t)) * 4294967296) | 0;
        }
        for (var i = 2, n = 0; n < 64; )
          t(i) &&
            (n < 8 && (c[n] = r(e.pow(i, 0.5))),
            (a[n] = r(e.pow(i, 1 / 3))),
            n++),
            i++;
      })(),
      (f = []),
      (h = s.SA =
        o.extend({
          _doReset: function () {
            this._hash = new n.init(c.slice(0));
          },
          _doProcessBlock: function (t, e) {
            for (
              var r = this._hash.words,
                i = r[0],
                n = r[1],
                o = r[2],
                s = r[3],
                c = r[4],
                h = r[5],
                u = r[6],
                _ = r[7],
                p = 0;
              p < 64;
              p++
            ) {
              if (p < 16) f[p] = 0 | t[e + p];
              else {
                var d = f[p - 15],
                  l =
                    ((d << 25) | (d >>> 7)) ^
                    ((d << 14) | (d >>> 18)) ^
                    (d >>> 3),
                  $ = f[p - 2],
                  y =
                    (($ << 15) | ($ >>> 17)) ^
                    (($ << 13) | ($ >>> 19)) ^
                    ($ >>> 10);
                f[p] = l + f[p - 7] + y + f[p - 16];
              }
              var v = (c & h) ^ (~c & u),
                g = (i & n) ^ (i & o) ^ (n & o),
                S =
                  ((i << 30) | (i >>> 2)) ^
                  ((i << 19) | (i >>> 13)) ^
                  ((i << 10) | (i >>> 22)),
                B =
                  _ +
                  (((c << 26) | (c >>> 6)) ^
                    ((c << 21) | (c >>> 11)) ^
                    ((c << 7) | (c >>> 25))) +
                  v +
                  a[p] +
                  f[p],
                m = S + g;
              (_ = u),
                (u = h),
                (h = c),
                (c = (s + B) | 0),
                (s = o),
                (o = n),
                (n = i),
                (i = (B + m) | 0);
            }
            (r[0] = (r[0] + i) | 0),
              (r[1] = (r[1] + n) | 0),
              (r[2] = (r[2] + o) | 0),
              (r[3] = (r[3] + s) | 0),
              (r[4] = (r[4] + c) | 0),
              (r[5] = (r[5] + h) | 0),
              (r[6] = (r[6] + u) | 0),
              (r[7] = (r[7] + _) | 0);
          },
          _doFinalize: function () {
            var t = this._data,
              r = t.words,
              i = 8 * this._nDataBytes,
              n = 8 * t.sigBytes;
            return (
              (r[n >>> 5] |= 128 << (24 - (n % 32))),
              (r[(((n + 64) >>> 9) << 4) + 14] = e.floor(i / 4294967296)),
              (r[(((n + 64) >>> 9) << 4) + 15] = i),
              (t.sigBytes = 4 * r.length),
              this._process(),
              this._hash
            );
          },
          clone: function () {
            var t = o.clone.call(this);
            return (t._hash = this._hash.clone()), t;
          },
        })),
      (r.SA = o._createHelper(h)),
      (r.HmacSA = o._createHmacHelper(h)),
      t.SA
    );
  });
